<project name="ui-tenant-mgmt" default="clone-tenant" basedir=".">
  <description>Manage UI layer folders and files containing per-tenant configurations</description>
  
  <!-- 'environment' must be declared to bring values of system
       environment variables into Ant, prior to reading any
       properties files that may reference those values. -->
  <property environment="env" />
  <property name="src.dir" value="." />
  <!-- Location of the 'tenants' directory for this CollectionSpace source code layer. -->
  <property name="tenants.dir" value="${src.dir}/src/main/webapp/tenants"/>
  
  <!-- Imports a set of utility routines for managing tenant folders
       from a separate Ant buildfile.
       See http://wiki.apache.org/ant/NewAntFeaturesInDetail/Import -->
  <import file="./tenant-utils-build.xml"/>
  
  <!-- This target inherits from an (essentially empty) target in the imported
       utility routines buildfile, and adds its own behavior specific to this
       CollectionSpace source code layer. -->
  <target name="update-text-in-cloned-tenant" depends="tenant-utils.update-text-in-cloned-tenant">
    <!-- Update tenant names where found in property bundle files. -->
    <!-- Note: this text replacement is brute-force and will even replace sub-strings,
         if found, so you'll need to ensure that your 'template tenant' shortname is a
         unique string: that it won't be inadvertently contained within text elsewhere. -->
    <!-- TODO: Perform more nuanced replacements to avoid the problem described above. 
         (See the Ant ReplaceRegExp task for one potential approach when doing so.) -->
    <!-- TODO: This replacement is also currently case-sensitive, and may need to be
         revised to detect matches of the template tenant shortname regardless of case. -->
    <replace dir="${tenants.dir}/${tenant.shortname}/bundle" token="${template.tenant.shortname}"
      value="${tenant.shortname}">
    </replace>
  </target>
    
</project>